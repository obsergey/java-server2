buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "io.spring.gradle:dependency-management-plugin:${dependencyManagementVersion}"
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'war'
apply plugin: 'org.springframework.boot'
apply plugin: "io.spring.dependency-management"
apply from: 'libraries.gradle'

buildDir = "build"
group 'org.example.server'

sourceCompatibility = 1.8
targetCompatibility = 1.8

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-web"
    compile "org.springframework.boot:spring-boot-starter-logging"
//    compile "org.springframework.boot:spring-boot-starter-thymeleaf"
    compile "org.springframework.boot:spring-boot-starter-data-jpa"

    compile "org.postgresql:postgresql:${postgresDriverVersion}"

    compile "com.google.guava:guava:${guavaVersion}"
    compile "org.apache.commons:commons-lang3:${commonsLangVersion}"

    compile "org.projectlombok:lombok:${lombokVersion}"
    compile "com.google.code.findbugs:jsr305:${findbugsVersion}"
    
    compile 'com.github.jsimone:webapp-runner:8.5.11.3'

//    testCompile "org.springframework.boot:spring-boot-starter-test"
}

task wrapper(type: Wrapper) {
    gradleVersion = "3.5"
}

task stage(type: Copy, dependsOn: [clean, build]) {
    from jar.archivePath
    into project.rootDir 
    rename {
        'app.jar'
    }
}
stage.mustRunAfter(clean)

clean << {
    project.file('app.jar').delete()
}
